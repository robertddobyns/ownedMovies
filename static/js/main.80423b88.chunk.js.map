{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","root","width","maxWidth","margin","form","border","position","padding","borderRadius","marginBottom","formTitle","top","backgroundColor","App","classes","useState","keyword","setKeyword","movieList","setMovieList","displaySearchedMovieList","setDisplaySearchedMovieList","keywordSearch","movies","key","movieListJson","hasOwnProperty","name","toLowerCase","search","push","className","TextField","label","onChange","e","target","value","Button","type","variant","color","onClick","event","preventDefault","map","row","style","fontWeight","year","displayAllMovies","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"grCAIMA,EAAYC,YAAW,CAC3BC,KAAM,CACJC,MAAO,OACPC,SAAU,QACRC,OAAQ,aAEVC,KAAM,CACJC,OAAQ,kBACNC,SAAU,WACVC,QAAS,GACTC,aAAc,GACdC,aAAc,IAElBC,UAAW,CACTJ,SAAU,WACRK,KAAM,GACNC,gBAAiB,QACjBL,QAAS,WAmEFM,MA7Df,WACI,IAAMC,EAAUhB,IADL,EAEmBiB,mBAAS,MAF5B,mBAEJC,EAFI,KAEKC,EAFL,OAGuBF,mBAAS,MAHhC,mBAGJG,EAHI,KAGOC,EAHP,OAIqDJ,oBAAS,GAJ9D,mBAIJK,EAJI,KAIsBC,EAJtB,KAYLC,EAAgB,WAClB,IAAIC,EAAS,GACb,IAAK,IAAIC,KAAOC,EACRA,EAAcC,eAAeF,KAC+C,IAAzEC,EAAcD,GAAKG,KAAKC,cAAcC,OAAOb,EAAQY,iBACpDH,EAAcD,GAAKA,IAAMA,EACzBD,EAAOO,KAAKL,EAAcD,KAItCL,EAAaI,IAyBjB,OACA,sBAAKQ,UAAWjB,EAAQd,KAAxB,UACI,uBAAM+B,UAAWjB,EAAQV,KAAzB,UACI,qBAAK2B,UAAWjB,EAAQJ,UAAxB,4BACA,cAACsB,EAAA,EAAD,CAAWC,MAAO,UAAWC,SAAU,SAAAC,GAAC,OAAIlB,EAAWkB,EAAEC,OAAOC,UAChE,cAACC,EAAA,EAAD,CAAQC,KAAM,SAAUC,QAAS,YAAaC,MAAO,UAAWC,QA9CnD,SAAAC,GACjBA,EAAMC,iBACNvB,GAA4B,GAC5BC,KA2CI,uBAEJ,8BACKF,EA5BDF,EAAU2B,KAAI,SAAAC,GAAG,OACb,gCAAmB,sBAAMC,MAAO,CAACC,WAAY,QAA1B,SAAoCF,EAAInB,OAA3D,KAA0EmB,EAAIG,KAA9E,MAAUH,EAAItB,QAKD,WACrB,IAAID,EAAS,GACb,IAAK,IAAIC,KAAOC,EACRA,EAAcC,eAAeF,IAC7BD,EAAOO,KAAKL,EAAcD,IAGlC,OACID,EAAOsB,KAAI,SAAAC,GAAG,OACV,gCAAmB,sBAAMC,MAAO,CAACC,WAAY,QAA1B,SAAoCF,EAAInB,OAA3D,KAA0EmB,EAAIG,KAA9E,MAAUH,EAAItB,QAamC0B,SCtElDC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.80423b88.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport {makeStyles, Typography, Button, TextField, FormLabel} from \"@material-ui/core\";\nimport movieListJson from './movies.json';\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n    maxWidth: '900px',\n      margin: '20px auto'\n  },\n    form: {\n      border: '5px solid black',\n        position: 'relative',\n        padding: 20,\n        borderRadius: 10,\n        marginBottom: 20,\n    },\n    formTitle: {\n      position: 'absolute',\n        top: -15,\n        backgroundColor: 'white',\n        padding: '0 5px'\n    }\n})\n\n\n\nfunction App() {\n    const classes = useStyles();\n    const [keyword, setKeyword] = useState(null);\n    const [movieList, setMovieList] = useState(null);\n    const [displaySearchedMovieList, setDisplaySearchedMovieList] = useState(false);\n\n    const handleSubmit = event => {\n        event.preventDefault();\n        setDisplaySearchedMovieList(true);\n        keywordSearch();\n    }\n\n    const keywordSearch = () => {\n        let movies = [];\n        for (let key in movieListJson) {\n            if (movieListJson.hasOwnProperty(key)) {\n                if(movieListJson[key].name.toLowerCase().search(keyword.toLowerCase()) !== -1) {\n                    movieListJson[key].key = key;\n                    movies.push(movieListJson[key]);\n                }\n            }\n        }\n        setMovieList(movies);\n    }\n\n    const displaySearchResults = () => {\n        return (\n            movieList.map(row => (\n                <div key={row.key}><span style={{fontWeight: 'bold'}}>{row.name}</span> ({row.year})</div>\n            ))\n        )\n    }\n\n    const displayAllMovies = () => {\n        let movies = [];\n        for (let key in movieListJson) {\n            if (movieListJson.hasOwnProperty(key)) {\n                movies.push(movieListJson[key]);\n            }\n        }\n        return (\n            movies.map(row => (\n                <div key={row.key}><span style={{fontWeight: 'bold'}}>{row.name}</span> ({row.year})</div>\n            ))\n        )\n    }\n\n    return (\n    <div className={classes.root}>\n        <form className={classes.form}>\n            <div className={classes.formTitle}>Keyword Search</div>\n            <TextField label={'Keyword'} onChange={e => setKeyword(e.target.value)}/>\n            <Button type={'submit'} variant={'contained'} color={'primary'} onClick={handleSubmit}>Submit</Button>\n        </form>\n        <div>\n            {displaySearchedMovieList ? displaySearchResults() : displayAllMovies() }\n        </div>\n    </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}